version: 2.1

executors:
  app-executor:
    docker:
      - image: circleci/node:17.2.0
    working_directory: ~/repo
  terraform-executor:
    docker:
      - image: hashicorp/terraform:1.4

aliases:
  - &show-current-branch
    run:
      name: Show current branch
      command: echo "Current branch is $CIRCLE_BRANCH"
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package-lock.json" }}
        - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package-lock.json" }}

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *restore-cache
      - *install-dependencies
      - *save-cache
      - run:
          name: Copy Terraform Folder
          command: cp -r terraform artifacts/terraform
      - persist_to_workspace:
          root: ./
          paths:
            - artifacts

  linting:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *restore-cache
      - run:
          name: Linting
          command: npm run lint

  prettier:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *restore-cache
      - run:
          name: Run prettier check
          command: npm run prettier:check

  test:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch
      - *restore-cache
      - run:
          name: Run unit tests
          command: npm run test

  terraform-validate:
    executor: terraform-executor
    steps:
      - checkout
      - *show-current-branch
      - run:
          name: Terraform validate & Format
          command: |
            cd terraform
            terraform init -backend=false
            terraform validate
            terraform fmt -check

  terraform-plan-and-apply:
    executor: terraform-executor
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - *show-current-branch
      - run:
          name: Terraform Plan
          command: |
            cd artifacts/terraform
            terraform workspace select $CIRCLE_BRANCH || terraform workspace new $CIRCLE_BRANCH
            terraform plan
      - run:
          name: Terraform Apply
          command: |
            cd artifacts/terraform
            terraform workspace select $CIRCLE_BRANCH
            terraform apply --auto-approve
            terraform output frontend_workflow_bucket_name > ../frontend_workflow_bucket_name.txt
            terraform output cloudfront_distribution_id > ../cloudfront_distribution_id.txt
      - persist_to_workspace:
          root: ./
          paths:
            - artifacts

workflows:
  build-and-deploy:
    jobs:
      - build

      - linting:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - main
                - FW-16-terraform-pipeline

      - prettier:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - main
                - FW-16-terraform-pipeline

      - test:
          requires:
            - linting
            - prettier
          filters:
            branches:
              only:
                - develop
                - staging
                - main
                - FW-16-terraform-pipeline


      - terraform-validate:
          requires:
            - test
          filters:
            branches:
              only:
                - develop
                - staging
                - main
                - FW-16-terraform-pipeline

      - terraform-plan-and-apply:
          requires:
            - terraform-validate
          filters:
            branches:
              only:
                - develop
                - staging
                - main
                - FW-16-terraform-pipeline

